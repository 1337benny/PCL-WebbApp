@model Checklist

<h2 class="mt-5">@Model.Name</h2>

<!-- Kundinformation tabell -->
<div>
    <table id="customer-table" class="table table-bordered table-striped" style="width: 100%; table-layout: fixed;">
        <thead>
            <tr>
                <th style="width: 70%; text-align: left; vertical-align: middle;">Kund</th>
                <th style="width: 30%; text-align: left; vertical-align: middle;">Stad</th>
                
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Model.ProjectHasChecklists.FirstOrDefault().Project.ClientHasProjects.FirstOrDefault().Client.Name</td>
                <td>@Model.ProjectHasChecklists.FirstOrDefault().Project.ClientHasProjects.FirstOrDefault().Client.City</td>
                
            </tr>
        </tbody>
    </table>
</div>

<!-- Bedömning tabell -->
<div>
    <table id="assessment-table" class="table table-bordered table-striped" style="width: 100%; table-layout: fixed;">
        <thead>
            <tr>
                <th style="width: 50%; text-align: left; vertical-align: middle;">Bedömning av</th>
                <th style="width: 50%; text-align: left; vertical-align: middle;">Signatur</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                
                    <td>@Model.Creator.Firstname @Model.Creator.Lastname</td>
                
                
                <td></td>
            </tr>
        </tbody>
    </table>
</div>

<!-- Bedömningar -->
<div class="p-1 m-1">
    <label>Bedömningar:</label>
    <p>
        <span class="fw-bold">(G)</span> = Klar utan anmärkning.
        <span class="fw-bold">(Å)</span> = Åtgärdas.
        <span class="fw-bold">(X)</span> = Ej tillämligt.
    </p>
</div>
@{
    var tasks = Model.ListTasks.ToList();
}
<!-- Uppgifter tabell -->
<form id="update-project-checklist-form" asp-action="UpdateProjectChecklist" method="post">
    <input type="hidden" asp-for="Id" />

    <table id="tasks-table" class="table table-bordered table-striped" style="width: 100%; table-layout: fixed;">
        <thead>
            <tr>
                
                <th style="width: 20%; text-align: left; vertical-align: middle;">Uppgift</th>
                <th style="width: 30%; text-align: left; vertical-align: middle;">Beskrivning</th>
                <th style="width: 5%; text-align: left; vertical-align: middle;">Bed.</th>
                <th style="width: 15%; text-align: left; vertical-align: middle;">Datum</th>
                <th style="width: 30%; text-align: left; vertical-align: middle;">Notering</th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < tasks.Count; i++)
            {
                var assessment = tasks[i].Assessment ?? "X"; // Standardvärde om Assessment är null
                var isCompleted = tasks[i].IsCompleted.ToString().ToLower();

                <tr>
                    <input type="hidden" name="ListTasks[@i].Id" value="@tasks[i].Id" />
                   
                    <td style="vertical-align: middle;">@tasks[i].Name</td>
                    <td style="vertical-align: middle;">@tasks[i].Description</td>
                    <td style="vertical-align: middle;">
                        <select name="ListTasks[@i].Assessment" class="form-control" style="width: 100%;">
                            <option value="G" selected="@(assessment == "G")">G</option>
                            <option value="Å" selected="@(assessment == "Å")">Å</option>
                            <option value="X" selected="@(assessment == "X")">X</option>
                        </select>
                    </td>
                    <td style="vertical-align: middle;">
                        <input name="ListTasks[@i].EditedDate" type="date" value="@tasks[i].EditedDate" />
                    </td>
                    <td>
                        <textarea name="ListTasks[@i].Note" class="form-control" style="width: 100%; resize: none;" rows="3">@tasks[i].Note</textarea>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="submit" class="btn btn-primary mt-3">Spara</button>
</form>

<table id="tasks-table-copy" class="table table-bordered table-striped" style="width: 100%; table-layout: fixed;" hidden>
    <thead>
        <tr>
            <th style="width: 25%; text-align: left; vertical-align: middle;">Uppgift</th>
            <th style="width: 30%; text-align: left; vertical-align: middle;">Beskrivning</th>
            <th style="width: 5%; text-align: left; vertical-align: middle;">Bed.</th>
            <th style="width: 10%; text-align: left; vertical-align: middle;">Datum</th>
            <th style="width: 30%; text-align: left; vertical-align: middle;">Notering</th>
        </tr>
    </thead>
    <tbody>
        @for (var i = 0; i < tasks.Count; i++)
        {
            var assessment = tasks[i].Assessment ?? "X"; // Standardvärde om Assessment är null
            var isCompleted = tasks[i].IsCompleted.ToString().ToLower();

            <tr>
                
                
                <td style="vertical-align: middle;">@tasks[i].Name</td>
                <td style="vertical-align: middle;">@tasks[i].Description</td>
                <td>
                    @tasks[i].Assessment
                </td>
                <td>@tasks[i].EditedDate</td>
                <td>
                    @tasks[i].Note
                </td>
            </tr>
        }
    </tbody>
</table>

<button id="save-pdf" class="btn btn-success mt-1">Ladda ner PDF 
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-earmark-arrow-down" viewBox="0 0 16 16">
        <path d="M8.5 6.5a.5.5 0 0 0-1 0v3.793L6.354 9.146a.5.5 0 1 0-.708.708l2 2a.5.5 0 0 0 .708 0l2-2a.5.5 0 0 0-.708-.708L8.5 10.293z" />
        <path d="M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2M9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5z" />
    </svg>
</button>
<p class="fw-light" style="color: grey;">Glöm inte spara innan du laddar ner.</p>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.15/jspdf.plugin.autotable.min.js"></script>


<script>

                document.getElementById('save-pdf').addEventListener('click', function () {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF();

        // Startpunkt för första tabellen
        let currentY = 20;

        // Lägg till titel
        doc.setFontSize(18);
       
        doc.text("@Html.Raw(Model.Creator.CompanyName)", 14, currentY);
        currentY += 10;
        doc.setFontSize(14);
        doc.text("@Html.Raw(Model.Name)", 14, currentY);
        currentY += 3; // Flytta nedåt för nästa innehåll

        // Lägg till första tabellen - Kundinformation
        doc.setFontSize(12);
        
        currentY += 3;
        doc.autoTable({
            html: '#customer-table',
            startY: currentY,
            styles: { fontSize: 10, cellPadding: 5 },
            headStyles: { fillColor: [22, 160, 133] },
            pageBreak: 'auto',
            showHead: 'firstPage'
        });
        currentY = doc.lastAutoTable.finalY + 10; // Uppdatera Y-position efter första tabellen

        // Lägg till andra tabellen - Bedömning av
        
        currentY += 3;
        doc.autoTable({
            html: '#assessment-table',
            startY: currentY,
            styles: { fontSize: 10, cellPadding: 5 },
            headStyles: { fillColor: [22, 160, 133] },
            pageBreak: 'auto'
        });
        currentY = doc.lastAutoTable.finalY + 10; // Uppdatera Y-position efter andra tabellen

        // Lägg till tredje tabellen - Uppgifter
            doc.setFontSize(10);
            doc.text("(G) = Klar utan anmärkning. (X) = Ej tillämpligt. (Å) = Åtgärdas. ", 20, currentY);
        currentY += 3;
        doc.autoTable({
            html: '#tasks-table-copy',
            startY: currentY,
            styles: { fontSize: 10, cellPadding: 5 },
            headStyles: { fillColor: [22, 160, 133] },
            pageBreak: 'auto'
        });

        // Spara PDF
        doc.save("@Model.Name" + "_" + "@Model.ProjectHasChecklists.FirstOrDefault().Project.ClientHasProjects.FirstOrDefault().Client.Name" + ".pdf");
    });



</script>





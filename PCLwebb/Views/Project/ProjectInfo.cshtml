@model Project

<h5 class="text-center my-5">Projektsida</h5>

<div class="border shadow p-2 mt-4">
    <form asp-action="EditProjectInfo" method="post">
        <label class="fw-bold" style="margin-top: 15px;">Kund: 
            @foreach(Client_Has_Project client_Has_Project in Model.ClientHasProjects){
                <p class="fw-normal">@client_Has_Project.Client.Name</p>
            }
        </label>
        <br />
        <label class="fw-bold" style="margin-top: 15px;">Projektnamn: </label>
        <input class="w-100" id="editName" asp-for="Name" />
        <br />
        <label class="fw-bold" style="margin-top: 15px;">Beskrivning: </label>
        @* <input id="editDescription" asp-for="Description" /> *@
        <textarea id="editDescription" asp-for="Description" rows="4" class="form-control"></textarea>
        <br />
        <label class="fw-bold" style="margin-top: 15px;">Startdatum: </label>
        <input type="date" id="editStartdate" asp-for="StartDate" />
        <br />
        <label class="fw-bold" style="margin-top: 15px;">Slutdatum: </label>
        <input type="date" id="editEnddate" asp-for="EndDate" />
        <br />
        <label class="fw-bold" style="margin-top: 15px;">Status: </label>
        @* <input asp-for="IsActive" /> *@
        <select asp-for="IsActive">
            <option value="true">Aktivt</option>
            <option value="false">Avslutat</option>
        </select>
        <br />
        <input hidden asp-for="Id" />
        <button class="btn btn-primary" style="margin-top: 15px;" id="updateProjectButton" type="submit" disabled>Uppdatera info</button>
    </form>

    <script>
        // Hämta alla relevanta input-element
        const nameInput = document.getElementById("editName");
        const descriptionInput = document.getElementById("editDescription");
        const startdateInput = document.getElementById("editStartdate");
        const enddateInput = document.getElementById("editEnddate");
        const addButton = document.getElementById("updateProjectButton");

        // Funktion som validerar att alla fält är ifyllda
        function validateForm() {
            const name = nameInput.value.trim();
            const description = descriptionInput.value.trim();
            const startdate = startdateInput.value.trim();
            const enddate = enddateInput.value.trim();

            const isNameValid = name !== "";
            const isDescriptionValid = description !== "";
            const isStartdateValid = startdate !== "";
            const isEnddateValid = enddate !== "";

            // Aktivera eller inaktivera knappen baserat på valideringen
            addButton.disabled = !(isNameValid && isDescriptionValid && isStartdateValid && isEnddateValid);
        }

        // Lägg till event listeners för att lyssna på ändringar i varje input-fält
        nameInput.addEventListener("input", validateForm);
        descriptionInput.addEventListener("input", validateForm);
        startdateInput.addEventListener("input", validateForm);
        enddateInput.addEventListener("input", validateForm);

        // Kör validering en gång vid sidladdning för att säkerställa att knappen är korrekt inställd
        document.addEventListener("DOMContentLoaded", validateForm);
    </script>

</div>

<div class="border shadow p-2 mt-2">
    <h4 class="text-center">Checklistor</h4>
    @if (Model.ProjectHasChecklists.FirstOrDefault() == null){
        <p>Du har inte lagt till någon checklista ännu.</p>
    }
    else{
        <table class="table table-fixed mt-5">
            <thead>
            <td style="width: 25%;" class="fw-bold">Checklista</td>
            <td style="width: 60%;" class="fw-bold">Beskrivning</td>
            <td style="width: 15%;" class="fw-bold">Antal uppgifter</td>
            </thead>

            @foreach(Project_Has_Checklist chp in Model.ProjectHasChecklists){

                <tbody>
                <td>@chp.Checklist.Name</td>
                <td>@chp.Checklist.Description</td>
                <td>
                        @{
                            int numberOfTasks = 0;
                        }
                        @foreach (ListTask task in @chp.Checklist.ListTasks)
                        {
                            numberOfTasks++;
                        }
                        @numberOfTasks.ToString()
                    <a asp-action="EditProjectChecklist" asp-route-checklistID="@chp.Checklist.Id"><button class="btn btn-primary" style="float: right;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                            </svg>
                    </button></a>

                </td>

                </tbody>
            
            }



        </table>

    }
    <h5>Lägg till en checklista</h5>
    <form asp-action="AddChecklistToProject" method="post">
        <select class="w-50" name="checklistID">
            @{
                
                var existingChecklistIds = Model.ProjectHasChecklists
                .Select(phc => phc.ChecklistID)
                .ToHashSet();

                
                var parentChecklistIdsInProject = Model.ProjectHasChecklists
                .Select(phc => Model.Creator.Checklists.FirstOrDefault(cl => cl.Id == phc.ChecklistID)?.ParentChecklistID)
                .Where(parentId => parentId.HasValue)
                .Select(parentId => parentId.Value)
                .ToHashSet();

                
                var availableChecklists = Model.Creator.Checklists
                .Where(cl => !existingChecklistIds.Contains(cl.Id) && !parentChecklistIdsInProject.Contains(cl.Id))
                .ToList();
            }

            @foreach (var checklist in availableChecklists)
            {
                <option value="@checklist.Id">@checklist.Name</option>
            }
        </select>
        <input hidden name="projectId" value="@Model.Id" />
        <button class="btn btn-primary" style="margin-top: 15px;" type="submit">Lägg till</button>
    </form>

    
</div>
